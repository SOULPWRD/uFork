// 0x00000000
c25f  // BOOT
// 001: PANIC!
002f  // FAIL
8001  // jump(001)
// 003: ^C
521f  // (CONST)
0003
// 005: '\b'
521f  // (CONST)
0008
// 007: '\t'
521f  // (CONST)
0009
// 009: '\n'
521f  // (CONST)
000a
// 00b: '\r'
521f  // (CONST)
000d
// 00d: BL
521f  // (CONST)
0020
// 00f: '0'
521f  // (CONST)
// 0x00000010
0030
// 011: '9'
521f  // (CONST)
0039
// 013: A-10
521f  // (CONST)
0037
// 015: 'A'
521f  // (CONST)
0041
// 017: 'F'
521f  // (CONST)
0046
// 019: 'Z'
521f  // (CONST)
005a
// 01b: 'a'
521f  // (CONST)
0061
// 01d: 'f'
521f  // (CONST)
0066
// 01f: 'z'
521f  // (CONST)
// 0x00000020
007a
// 021: DEL
521f  // (CONST)
007f
// 023: (JMP)
1280  // R>
// 024: @EXECUTE
030f  // @
// 025: EXECUTE
021f  // (LIT)
0fff
0744  // AND
2100  // >R
// 029: (EXIT)
5000  // NOP EXIT
// 02a: ?:
902c  // jump_ifzero(02c)
0400  // SWAP
// 02c: (DROP)
5100  // DROP EXIT
// 02d: (VAR)
1280  // R>
5000  // NOP EXIT
// 02f: (CONST)
1280  // R>
// 0x00000030
530f  // @ EXIT
// 031: NIP
0400  // SWAP
5100  // DROP EXIT
// 033: TUCK
0400  // SWAP
5240  // OVER EXIT
// 035: 2DUP
0240  // OVER
5240  // OVER EXIT
// 037: 2DROP
0100  // DROP
5100  // DROP EXIT
// 039: ABS
0200  // DUP
0324  // MSB&
903d  // jump_ifzero(03d)
53c2  // NEGATE EXIT
// 03d: BOOL
9040  // jump_ifzero(040)
02f6  // TRUE
8041  // jump(041)
// 0x00000040
02c0  // 0
5000  // NOP EXIT
// 042: =
0745  // XOR
// 043: 0=
// 043: NOT
9046  // jump_ifzero(046)
02c0  // 0
8047  // jump(047)
02f6  // TRUE
5000  // NOP EXIT
// 048: <>
c042  // =
5335  // INVERT EXIT
// 04a: 0>
03c2  // NEGATE
// 04b: 0<
0324  // MSB&
803d  // jump(03d)
// 04d: >
0400  // SWAP
// 04e: <
0742  // -
804b  // jump(04b)
// 0x00000050
// 050: >=
c04e  // <
5335  // INVERT EXIT
// 052: <=
c04d  // >
5335  // INVERT EXIT
// 054: MAX
c035  // 2DUP
c04e  // <
802a  // jump(02a)
// 057: MIN
c035  // 2DUP
c04d  // >
802a  // jump(02a)
// 05a: @1+
0200  // DUP
030f  // @
0311  // 1+
0400  // SWAP
598f  // ! EXIT
// 05f: @1-
0200  // DUP
// 0x00000060
030f  // @
0312  // 1-
0400  // SWAP
598f  // ! EXIT
// 064: INBOUNDS
0600  // -ROT
0240  // OVER
0400  // SWAP
0742  // -
0600  // -ROT
0742  // -
0746  // OR
0324  // MSB&
8043  // jump(043)
// 06d: ISDIGIT
c00f  // '0'
c011  // '9'
8064  // jump(064)
// 0x00000070
// 070: ISHEX
0200  // DUP
c015  // 'A'
c017  // 'F'
c064  // INBOUNDS
0240  // OVER
c01b  // 'a'
c01d  // 'f'
c064  // INBOUNDS
0746  // OR
0400  // SWAP
c06d  // ISDIGIT
5746  // OR EXIT
// 07c: ISUPPER
c015  // 'A'
c019  // 'Z'
8064  // jump(064)
// 07f: ISLOWER
c01b  // 'a'
// 0x00000080
c01f  // 'z'
8064  // jump(064)
// 082: TOUPPER
0200  // DUP
c07f  // ISLOWER
9087  // jump_ifzero(087)
c00d  // BL
0745  // XOR
5000  // NOP EXIT
// 088: TOLOWER
0200  // DUP
c07c  // ISUPPER
908d  // jump_ifzero(08d)
c00d  // BL
0745  // XOR
5000  // NOP EXIT
// 08e: TOHEX
021f  // (LIT)
000f
// 0x00000090
0744  // AND
0200  // DUP
021f  // (LIT)
000a
c04e  // <
9098  // jump_ifzero(098)
c00f  // '0'
8099  // jump(099)
c013  // A-10
5741  // + EXIT
// 09a: FROMHEX
c082  // TOUPPER
0200  // DUP
c015  // 'A'
c04e  // <
90a1  // jump_ifzero(0a1)
c00f  // '0'
// 0x000000a0
80a2  // jump(0a2)
c013  // A-10
5742  // - EXIT
// 0a3: TX?
// 0a3: EMIT?
021f  // (LIT)
0000  // NOP
533f  // IO@ EXIT
// 0a6: SPACE
c00d  // BL
// 0a7: EMIT
c0a3  // TX?
90a7  // jump_ifzero(0a7)
// 0a9: TX!
021f  // (LIT)
0001
59bf  // IO! EXIT
// 0ac: RX?
// 0ac: KEY?
021f  // (LIT)
0002
533f  // IO@ EXIT
// 0af: KEY
c0ac  // RX?
// 0x000000b0
90af  // jump_ifzero(0af)
// 0b1: RX@
021f  // (LIT)
0003
533f  // IO@ EXIT
// 0b4: SPACES
2100  // >R
80b7  // jump(0b7)
c0a6  // SPACE
b0b6  // jump_ifnz_dec(0b6)
5000  // NOP EXIT
// 0b9: CR
c00b  // '\r'
c0a7  // EMIT
c009  // '\n'
80a7  // jump(0a7)
// 0bd: ECHO
c0a7  // EMIT
0200  // DUP
c00b  // '\r'
// 0x000000c0
c042  // =
90c4  // jump_ifzero(0c4)
c009  // '\n'
c0a7  // EMIT
5000  // NOP EXIT
// 0c5: X#
c08e  // TOHEX
80a7  // jump(0a7)
// 0c7: X.
021f  // (LIT)
0004
2100  // >R
80ce  // jump(0ce)
0309  // 4ROL
0200  // DUP
c0c5  // X#
b0cb  // jump_ifnz_dec(0cb)
5100  // DROP EXIT
// 0x000000d0
// 0d0: '!'
521f  // (CONST)
0021
// 0d2: '.'
521f  // (CONST)
002e
// 0d4: '/'
521f  // (CONST)
002f  // FAIL
// 0d6: '<'
521f  // (CONST)
003c
// 0d8: '>'
521f  // (CONST)
003e
// 0da: '?'
521f  // (CONST)
003f
// 0dc: '@'
521f  // (CONST)
0040
// 0de: '['
521f  // (CONST)
005b
// 0x000000e0
// 0e0: ']'
521f  // (CONST)
005d
// 0e2: 'q'
521f  // (CONST)
0071
// 0e4: 'r'
521f  // (CONST)
0072
// 0e6: cmd
521f  // (CONST)
00e8
0000  // NOP
// 0e9: inp
521f  // (CONST)
00eb
0000  // NOP
// 0ec: tos
521f  // (CONST)
00ee
0000  // NOP
// 0ef: nos
521f  // (CONST)
// 0x000000f0
00f1
0000  // NOP
// 0f2: copy
521f  // (CONST)
00f4
0000  // NOP
// 0f5: here
521f  // (CONST)
00f7
0000  // NOP
// 0f8: push
c0ec  // tos
030f  // @
c0ef  // nos
098f  // !
c0ec  // tos
598f  // ! EXIT
// 0fe: pop
c0ec  // tos
030f  // @
// 0x00000100
c0ef  // nos
030f  // @
c0ec  // tos
598f  // ! EXIT
// 104: quad
0200  // DUP
0324  // MSB&
910b  // jump_ifzero(10b)
021f  // (LIT)
0fff
0744  // AND
811a  // jump(11a)
0308  // 2ROL
0200  // DUP
0314  // LSB&
9116  // jump_ifzero(116)
021f  // (LIT)
// 0x00000110
3ffc
0744  // AND
021f  // (LIT)
4000
0746  // OR
811a  // jump(11a)
021f  // (LIT)
7ffc
0744  // AND
0326  // MSB|
5000  // NOP EXIT
// 11b: fetch
0200  // DUP
021f  // (LIT)
c000  // call(000)
0744  // AND
9148  // jump_ifzero(148)
// 0x00000120
0200  // DUP
021f  // (LIT)
0003
0744  // AND
0400  // SWAP
0200  // DUP
0324  // MSB&
912c  // jump_ifzero(12c)
030c  // 2ASR
021f  // (LIT)
1fff
812f  // jump(12f)
030c  // 2ASR
021f  // (LIT)
0fff
0744  // AND
// 0x00000130
0240  // OVER
021f  // (LIT)
0001
c042  // =
9137  // jump_ifzero(137)
035f  // QX@
8146  // jump(146)
0240  // OVER
021f  // (LIT)
0002
c042  // =
913e  // jump_ifzero(13e)
036f  // QY@
8146  // jump(146)
0240  // OVER
021f  // (LIT)
// 0x00000140
0003
c042  // =
9145  // jump_ifzero(145)
037f  // QZ@
8146  // jump(146)
034f  // QT@
c031  // NIP
8149  // jump(149)
030f  // @
5000  // NOP EXIT
// 14a: store
0200  // DUP
021f  // (LIT)
c000  // call(000)
0744  // AND
917b  // jump_ifzero(17b)
0200  // DUP
// 0x00000150
021f  // (LIT)
0003
0744  // AND
0400  // SWAP
0200  // DUP
0324  // MSB&
915b  // jump_ifzero(15b)
030c  // 2ASR
021f  // (LIT)
1fff
815e  // jump(15e)
030c  // 2ASR
021f  // (LIT)
0fff
0744  // AND
0400  // SWAP
// 0x00000160
0200  // DUP
021f  // (LIT)
0001
c042  // =
9168  // jump_ifzero(168)
0100  // DROP
09df  // QX!
817a  // jump(17a)
0200  // DUP
021f  // (LIT)
0002
c042  // =
9170  // jump_ifzero(170)
0100  // DROP
09ef  // QY!
817a  // jump(17a)
// 0x00000170
0200  // DUP
021f  // (LIT)
0003
c042  // =
9178  // jump_ifzero(178)
0100  // DROP
09ff  // QZ!
817a  // jump(17a)
0100  // DROP
09cf  // QT!
817c  // jump(17c)
098f  // !
5000  // NOP EXIT
// 17d: dump
0240  // OVER
0742  // -
0200  // DUP
// 0x00000180
c04b  // 0<
9184  // jump_ifzero(184)
c037  // 2DROP
8196  // jump(196)
0311  // 1+
2100  // >R
8193  // jump(193)
0200  // DUP
c11b  // fetch
0240  // OVER
021f  // (LIT)
0007
0744  // AND
9190  // jump_ifzero(190)
c0a6  // SPACE
8191  // jump(191)
// 0x00000190
c0b9  // CR
c0c7  // X.
0311  // 1+
b187  // jump_ifnz_dec(187)
c0b9  // CR
0100  // DROP
5000  // NOP EXIT
// 197: >inp
c09a  // FROMHEX
c0e9  // inp
030f  // @
0309  // 4ROL
021f  // (LIT)
fff0  // call_ifnz_dec(ff0)
0744  // AND
0746  // OR
c0e9  // inp
// 0x000001a0
598f  // ! EXIT
// 1a1: >here
c0f5  // here
030f  // @
c14a  // store
c0f5  // here
805a  // jump(05a)
// 1a6: prompt
c0d8  // '>'
c0a7  // EMIT
c00d  // BL
80a7  // jump(0a7)
// 1aa: del
c0e6  // cmd
030f  // @
0200  // DUP
c00d  // BL
c04d  // >
91cd  // jump_ifzero(1cd)
// 0x000001b0
0200  // DUP
c070  // ISHEX
91c4  // jump_ifzero(1c4)
c0e9  // inp
030f  // @
030d  // 4ASR
021f  // (LIT)
0fff
0744  // AND
0200  // DUP
91be  // jump_ifzero(1be)
0200  // DUP
c08e  // TOHEX
81bf  // jump(1bf)
c00d  // BL
c0e6  // cmd
// 0x000001c0
098f  // !
c0e9  // inp
098f  // !
81c7  // jump(1c7)
c00d  // BL
c0e6  // cmd
098f  // !
c005  // '\b'
c0a7  // EMIT
c00d  // BL
c0a7  // EMIT
c005  // '\b'
c0a7  // EMIT
5100  // DROP EXIT
// 1ce: eol
c0a7  // EMIT
c0af  // KEY
// 0x000001d0
0200  // DUP
c00b  // '\r'
c042  // =
91d5  // jump_ifzero(1d5)
5000  // NOP EXIT
81ce  // jump(1ce)
// 1d6: MONITOR
c0af  // KEY
0200  // DUP
c003  // ^C
c042  // =
91dc  // jump_ifzero(1dc)
5000  // NOP EXIT
0200  // DUP
c005  // '\b'
c042  // =
91e2  // jump_ifzero(1e2)
// 0x000001e0
0100  // DROP
c021  // DEL
0200  // DUP
c021  // DEL
0745  // XOR
d1aa  // call_ifzero(1aa)
0200  // DUP
c0d4  // '/'
0745  // XOR
d1ce  // call_ifzero(1ce)
0200  // DUP
c0bd  // ECHO
c0e6  // cmd
030f  // @
0400  // SWAP
0200  // DUP
// 0x000001f0
c00d  // BL
c052  // <=
9247  // jump_ifzero(247)
c0f2  // copy
030f  // @
9204  // jump_ifzero(204)
0240  // OVER
c070  // ISHEX
91fc  // jump_ifzero(1fc)
c0e9  // inp
030f  // @
c1a1  // >here
0240  // OVER
c0e0  // ']'
c042  // =
9203  // jump_ifzero(203)
// 0x00000200
02c0  // 0
c0f2  // copy
098f  // !
823f  // jump(23f)
0240  // OVER
c070  // ISHEX
920a  // jump_ifzero(20a)
c0e9  // inp
030f  // @
c0f8  // push
0240  // OVER
c0dc  // '@'
c042  // =
9211  // jump_ifzero(211)
c0fe  // pop
c11b  // fetch
// 0x00000210
c0f8  // push
0240  // OVER
c0d2  // '.'
c042  // =
9218  // jump_ifzero(218)
c0fe  // pop
c0c7  // X.
c0b9  // CR
0240  // OVER
c0d0  // '!'
c042  // =
9220  // jump_ifzero(220)
c0fe  // pop
c0fe  // pop
0400  // SWAP
c14a  // store
// 0x00000220
0240  // OVER
c0e2  // 'q'
c042  // =
9227  // jump_ifzero(227)
c0fe  // pop
c104  // quad
c0f8  // push
0240  // OVER
c0da  // '?'
c042  // =
922f  // jump_ifzero(22f)
c0fe  // pop
c0fe  // pop
0400  // SWAP
c17d  // dump
0240  // OVER
// 0x00000230
c0de  // '['
c042  // =
9239  // jump_ifzero(239)
c0fe  // pop
c0f5  // here
098f  // !
02f6  // TRUE
c0f2  // copy
098f  // !
0240  // OVER
c0e4  // 'r'
c042  // =
923f  // jump_ifzero(23f)
c0fe  // pop
c025  // EXECUTE
02c0  // 0
// 0x00000240
c0e9  // inp
098f  // !
0200  // DUP
c00b  // '\r'
c042  // =
9247  // jump_ifzero(247)
c1a6  // prompt
0200  // DUP
c070  // ISHEX
924c  // jump_ifzero(24c)
0200  // DUP
c197  // >inp
0200  // DUP
c021  // DEL
c042  // =
9252  // jump_ifzero(252)
// 0x00000250
c037  // 2DROP
8255  // jump(255)
c031  // NIP
c0e6  // cmd
098f  // !
81d6  // jump(1d6)
// 256: ECHOLOOP
c0af  // KEY
0200  // DUP
c0c7  // X.
c0b9  // CR
c003  // ^C
c042  // =
925e  // jump_ifzero(25e)
5000  // NOP EXIT
8256  // jump(256)
// 25f: BOOT
c256  // ECHOLOOP
// 0x00000260
c1a6  // prompt
81d6  // jump(1d6)
// 0x00000262
